<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>SQL注入基础</title>
    <url>/2023/05/03/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="SQL注入基础"><a href="#SQL注入基础" class="headerlink" title="SQL注入基础"></a>SQL注入基础</h2><h4 id="SQL注入的产生"><a href="#SQL注入的产生" class="headerlink" title="SQL注入的产生"></a>SQL注入的产生</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意）的SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。</span><br></pre></td></tr></table></figure>

<h4 id="SQL注入的原理"><a href="#SQL注入的原理" class="headerlink" title="SQL注入的原理"></a>SQL注入的原理</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL注入攻击指的是通过构建特殊的输入作为参数传入Web应用程序，而这些输入大都是SQL语法里的一些组合，通过执行SQL语句进而执行攻击者所要的操作，其主要原因是程序没有细致地过滤用户输入的数据，致使非法数据侵入系统。</span><br><span class="line">根据相关技术原理，SQL注入可以分为平台层注入和代码层注入。前者由不安全的数据库配置或数据库平台的漏洞所致；后者主要是由于程序员对输入未进行细致地过滤，从而执行了非法的数据查询。基于此，SQL注入的产生原因通常表现在以下几方面：1、不当的类型处理；2、不安全的数据库配置；3、不合理的查询集处理；4、不当的错误处理；5、转义字符处理不合适；6、多个提交处理不当。</span><br></pre></td></tr></table></figure>

<h4 id="SQL注入类型"><a href="#SQL注入类型" class="headerlink" title="SQL注入类型"></a>SQL注入类型</h4><p>UNION query SQL injection     (可联合查询注入)</p>
<p>Error-based SQL injection        (报错型注入)</p>
<p>Boolean-based blind SQL injection  (布尔型注入)</p>
<p>Time-based blind SQL injection  (基于时间延迟注入)</p>
<p>Wide char SQL injection  (宽字节注入)</p>
<p>Twice SQL injection  (二次注入)</p>
<p>Stacked queries SQL injection  (可多语句查询注入) 堆叠注入</p>
<p>Access数据库 &#x3D;&gt;偏移注入</p>
<p>DNSlog  外带注入</p>
<h4 id="mysql函数利用"><a href="#mysql函数利用" class="headerlink" title="mysql函数利用"></a>mysql函数利用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- select database()            查看当前数据库的名称</span><br><span class="line">-- select @@basedir             mysql安装路径</span><br><span class="line">-- select @@datadir             mysql数据存储路径</span><br><span class="line">-- select @@version_compile_os  查看操作系统</span><br><span class="line"></span><br><span class="line">-- select user()</span><br><span class="line">-- select system_user()</span><br><span class="line">-- select session_user()</span><br><span class="line">-- select current_user  查看当前连接的用户名</span><br><span class="line"></span><br><span class="line">-- select version() </span><br><span class="line">-- select @@version 查看当前版本</span><br></pre></td></tr></table></figure>

<h4 id="注释风格"><a href="#注释风格" class="headerlink" title="注释风格"></a>注释风格</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#     (url编码为%23)</span><br><span class="line">--  或者--+  (--后边要跟上一个或多个空格)(+号在浏览器会被解析成空格)</span><br><span class="line">/*....*/  内联注释</span><br><span class="line"></span><br><span class="line">/*!*/ 这个没有任何意义，只是干扰，select</span><br><span class="line">/*!@@version*/</span><br><span class="line"></span><br><span class="line">select*/*!22222from*/ users;</span><br><span class="line">如果数字(5位) 大于当前mysql版本号 注释生效否则不生效 (绕过waf)</span><br></pre></td></tr></table></figure>

<h4 id="数据库-information-schema"><a href="#数据库-information-schema" class="headerlink" title="数据库:information_schema"></a>数据库:information_schema</h4><p>(存储所有数据库&#x2F;表&#x2F;字段的名称信息)</p>
<p>SCHEMATA表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">字段：SCHEMA_NAME （存储所有数据库的名称）</span><br></pre></td></tr></table></figure>

<p>TABLES表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">字段：TABLE_SCHEMA,TABLE_NAME（存储所有表的名称）</span><br></pre></td></tr></table></figure>

<p>COLUMNS表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">字段：TBALE_SCHEMA,TABLE_NAME,COLUMN_NAME（存储所有的字段名）</span><br></pre></td></tr></table></figure>

<h4 id="获取数据库名称"><a href="#获取数据库名称" class="headerlink" title="获取数据库名称"></a>获取数据库名称</h4><p> limit 一个一个打印出来库名<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select SCHEMA_NAME from information_schema.SCHEMATA limit 0,1</span><br></pre></td></tr></table></figure></p>
<p> group_concat 一次性全部显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA</span><br></pre></td></tr></table></figure>

<h4 id="列出-数据库：test-中所有的表"><a href="#列出-数据库：test-中所有的表" class="headerlink" title="列出(数据库：test)中所有的表"></a>列出(数据库：test)中所有的表</h4><p> limit 一个一个打印出来字段名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select TABLE_NAME from information_schema.TABLES where TABLE_SCHEMA=&#x27;test&#x27; limit 0,1</span><br></pre></td></tr></table></figure>

<p> group_concat 一次性全部显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select group_concat(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=0x674657374</span><br></pre></td></tr></table></figure>

<p>注意:数据库名称可以用十六进制来代替字符串，这样可以绕过单引号的限制。</p>
<h4 id="列出（数据库：test-表：admin-）中所有的字段"><a href="#列出（数据库：test-表：admin-）中所有的字段" class="headerlink" title="列出（数据库：test 表：admin ）中所有的字段"></a>列出（数据库：test 表：admin ）中所有的字段</h4><p> limit 一个一个打印出来<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select COLUMN_NAME from information_schema.COLUMNS where TABLE_SCHEMA=&#x27;test&#x27; and TABLE_NAME=&#x27;t10&#x27; limit 0,1</span><br></pre></td></tr></table></figure></p>
<p> group_concat 一次性全部显示</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select group_concat(COLUMN_NAME) from information_schema.COLUMNS where TABLE_SCHEMA=0x74657374 and TABLE_NAME=0x61646d696e</span><br></pre></td></tr></table></figure>

<h4 id="列出（数据库：test-表：admin-）中的数据"><a href="#列出（数据库：test-表：admin-）中的数据" class="headerlink" title="列出（数据库：test 表：admin ）中的数据"></a>列出（数据库：test 表：admin ）中的数据</h4><p>limit 一个一个打印出来<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select username,passwd from test.admin limit 0,1</span><br></pre></td></tr></table></figure></p>
<p>group_concat 把 一次性全部打印</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select group_concat(concat(username,0x3D,password)) from security.users</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
